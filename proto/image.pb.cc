// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: image.proto

#include "image.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace mmind {
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
}  // namespace mmind
namespace protobuf_image_2eproto {
static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mmind::_Request_default_instance_;
    new (ptr) ::mmind::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mmind::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequest}, {}};

static void InitDefaultsResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mmind::_Response_default_instance_;
    new (ptr) ::mmind::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mmind::Response::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Response =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Response.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Request, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Request, valuedouble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Request, mergematrix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Request, valuestring_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, imagergb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, imagedepth_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, imageir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, cameraids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, imagegrating_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, camintri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, offsetparams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, camerastatus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, stereoimages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, islowbrightness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, remapparams_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, parametervalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mmind::Response, error_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mmind::Request)},
  { 9, -1, sizeof(::mmind::Response)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mmind::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mmind::_Response_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "image.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013image.proto\022\005mmind\"Y\n\007Request\022\017\n\007comma"
      "nd\030\001 \001(\005\022\023\n\013valueDouble\030\002 \001(\001\022\023\n\013mergeMa"
      "trix\030\003 \003(\001\022\023\n\013valueString\030\004 \001(\t\"\244\002\n\010Resp"
      "onse\022\017\n\007command\030\001 \001(\005\022\020\n\010imageRGB\030\002 \001(\014\022"
      "\022\n\nimageDepth\030\003 \001(\014\022\017\n\007imageIr\030\004 \001(\014\022\021\n\t"
      "cameraIds\030\005 \003(\t\022\024\n\014imageGrating\030\006 \001(\014\022\020\n"
      "\010camIntri\030\007 \001(\t\022\024\n\014offsetParams\030\010 \001(\t\022\024\n"
      "\014cameraStatus\030\t \001(\t\022\024\n\014stereoImages\030\n \001("
      "\014\022\027\n\017isLowBrightness\030\013 \001(\010\022\023\n\013remapParam"
      "s\030\014 \001(\t\022\026\n\016parameterValue\030\r \001(\t\022\r\n\005error"
      "\030\016 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 414);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "image.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_image_2eproto
namespace mmind {

// ===================================================================

void Request::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kCommandFieldNumber;
const int Request::kValueDoubleFieldNumber;
const int Request::kMergeMatrixFieldNumber;
const int Request::kValueStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_image_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mmind.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mergematrix_(from.mergematrix_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  valuestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.valuestring().size() > 0) {
    valuestring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valuestring_);
  }
  ::memcpy(&valuedouble_, &from.valuedouble_,
    static_cast<size_t>(reinterpret_cast<char*>(&command_) -
    reinterpret_cast<char*>(&valuedouble_)) + sizeof(command_));
  // @@protoc_insertion_point(copy_constructor:mmind.Request)
}

void Request::SharedCtor() {
  valuestring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valuedouble_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&command_) -
      reinterpret_cast<char*>(&valuedouble_)) + sizeof(command_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:mmind.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  valuestring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_image_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_image_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_image_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:mmind.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mergematrix_.Clear();
  valuestring_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valuedouble_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&command_) -
      reinterpret_cast<char*>(&valuedouble_)) + sizeof(command_));
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mmind.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double valueDouble = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &valuedouble_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double mergeMatrix = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_mergematrix())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 26u, input, this->mutable_mergematrix())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string valueString = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_valuestring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->valuestring().data(), static_cast<int>(this->valuestring().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mmind.Request.valueString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mmind.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mmind.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mmind.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->command(), output);
  }

  // double valueDouble = 2;
  if (this->valuedouble() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->valuedouble(), output);
  }

  // repeated double mergeMatrix = 3;
  if (this->mergematrix_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _mergematrix_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->mergematrix().data(), this->mergematrix_size(), output);
  }

  // string valueString = 4;
  if (this->valuestring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valuestring().data(), static_cast<int>(this->valuestring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Request.valueString");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->valuestring(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mmind.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mmind.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->command(), target);
  }

  // double valueDouble = 2;
  if (this->valuedouble() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->valuedouble(), target);
  }

  // repeated double mergeMatrix = 3;
  if (this->mergematrix_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _mergematrix_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->mergematrix_, target);
  }

  // string valueString = 4;
  if (this->valuestring().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->valuestring().data(), static_cast<int>(this->valuestring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Request.valueString");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->valuestring(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mmind.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mmind.Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double mergeMatrix = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->mergematrix_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _mergematrix_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string valueString = 4;
  if (this->valuestring().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->valuestring());
  }

  // double valueDouble = 2;
  if (this->valuedouble() != 0) {
    total_size += 1 + 8;
  }

  // int32 command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->command());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mmind.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mmind.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mmind.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mmind.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mergematrix_.MergeFrom(from.mergematrix_);
  if (from.valuestring().size() > 0) {

    valuestring_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.valuestring_);
  }
  if (from.valuedouble() != 0) {
    set_valuedouble(from.valuedouble());
  }
  if (from.command() != 0) {
    set_command(from.command());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mmind.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mmind.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  mergematrix_.InternalSwap(&other->mergematrix_);
  valuestring_.Swap(&other->valuestring_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(valuedouble_, other->valuedouble_);
  swap(command_, other->command_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_image_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_image_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kCommandFieldNumber;
const int Response::kImageRGBFieldNumber;
const int Response::kImageDepthFieldNumber;
const int Response::kImageIrFieldNumber;
const int Response::kCameraIdsFieldNumber;
const int Response::kImageGratingFieldNumber;
const int Response::kCamIntriFieldNumber;
const int Response::kOffsetParamsFieldNumber;
const int Response::kCameraStatusFieldNumber;
const int Response::kStereoImagesFieldNumber;
const int Response::kIsLowBrightnessFieldNumber;
const int Response::kRemapParamsFieldNumber;
const int Response::kParameterValueFieldNumber;
const int Response::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_image_2eproto::scc_info_Response.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mmind.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cameraids_(from.cameraids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imagergb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imagergb().size() > 0) {
    imagergb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagergb_);
  }
  imagedepth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imagedepth().size() > 0) {
    imagedepth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagedepth_);
  }
  imageir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imageir().size() > 0) {
    imageir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imageir_);
  }
  imagegrating_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imagegrating().size() > 0) {
    imagegrating_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagegrating_);
  }
  camintri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.camintri().size() > 0) {
    camintri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camintri_);
  }
  offsetparams_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.offsetparams().size() > 0) {
    offsetparams_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offsetparams_);
  }
  camerastatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.camerastatus().size() > 0) {
    camerastatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camerastatus_);
  }
  stereoimages_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stereoimages().size() > 0) {
    stereoimages_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stereoimages_);
  }
  remapparams_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remapparams().size() > 0) {
    remapparams_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remapparams_);
  }
  parametervalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parametervalue().size() > 0) {
    parametervalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parametervalue_);
  }
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.error().size() > 0) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  ::memcpy(&command_, &from.command_,
    static_cast<size_t>(reinterpret_cast<char*>(&islowbrightness_) -
    reinterpret_cast<char*>(&command_)) + sizeof(islowbrightness_));
  // @@protoc_insertion_point(copy_constructor:mmind.Response)
}

void Response::SharedCtor() {
  imagergb_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagedepth_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imageir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagegrating_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camintri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offsetparams_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camerastatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stereoimages_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remapparams_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parametervalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islowbrightness_) -
      reinterpret_cast<char*>(&command_)) + sizeof(islowbrightness_));
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:mmind.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  imagergb_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagedepth_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imageir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagegrating_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camintri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offsetparams_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camerastatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stereoimages_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remapparams_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parametervalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_image_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_image_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_image_2eproto::scc_info_Response.base);
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:mmind.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cameraids_.Clear();
  imagergb_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagedepth_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imageir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagegrating_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camintri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offsetparams_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  camerastatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stereoimages_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remapparams_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parametervalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&command_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&islowbrightness_) -
      reinterpret_cast<char*>(&command_)) + sizeof(islowbrightness_));
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mmind.Response)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &command_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes imageRGB = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imagergb()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes imageDepth = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imagedepth()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes imageIr = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imageir()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string cameraIds = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_cameraids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cameraids(this->cameraids_size() - 1).data(),
            static_cast<int>(this->cameraids(this->cameraids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mmind.Response.cameraIds"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes imageGrating = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imagegrating()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string camIntri = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camintri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->camintri().data(), static_cast<int>(this->camintri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mmind.Response.camIntri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string offsetParams = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_offsetparams()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->offsetparams().data(), static_cast<int>(this->offsetparams().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mmind.Response.offsetParams"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cameraStatus = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_camerastatus()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->camerastatus().data(), static_cast<int>(this->camerastatus().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mmind.Response.cameraStatus"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes stereoImages = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_stereoimages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isLowBrightness = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &islowbrightness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string remapParams = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remapparams()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remapparams().data(), static_cast<int>(this->remapparams().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mmind.Response.remapParams"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parameterValue = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parametervalue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parametervalue().data(), static_cast<int>(this->parametervalue().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mmind.Response.parameterValue"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string error = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error().data(), static_cast<int>(this->error().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mmind.Response.error"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mmind.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mmind.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mmind.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 command = 1;
  if (this->command() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->command(), output);
  }

  // bytes imageRGB = 2;
  if (this->imagergb().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->imagergb(), output);
  }

  // bytes imageDepth = 3;
  if (this->imagedepth().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->imagedepth(), output);
  }

  // bytes imageIr = 4;
  if (this->imageir().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->imageir(), output);
  }

  // repeated string cameraIds = 5;
  for (int i = 0, n = this->cameraids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cameraids(i).data(), static_cast<int>(this->cameraids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.cameraIds");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->cameraids(i), output);
  }

  // bytes imageGrating = 6;
  if (this->imagegrating().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->imagegrating(), output);
  }

  // string camIntri = 7;
  if (this->camintri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->camintri().data(), static_cast<int>(this->camintri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.camIntri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->camintri(), output);
  }

  // string offsetParams = 8;
  if (this->offsetparams().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->offsetparams().data(), static_cast<int>(this->offsetparams().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.offsetParams");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->offsetparams(), output);
  }

  // string cameraStatus = 9;
  if (this->camerastatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->camerastatus().data(), static_cast<int>(this->camerastatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.cameraStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->camerastatus(), output);
  }

  // bytes stereoImages = 10;
  if (this->stereoimages().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->stereoimages(), output);
  }

  // bool isLowBrightness = 11;
  if (this->islowbrightness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->islowbrightness(), output);
  }

  // string remapParams = 12;
  if (this->remapparams().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remapparams().data(), static_cast<int>(this->remapparams().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.remapParams");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->remapparams(), output);
  }

  // string parameterValue = 13;
  if (this->parametervalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parametervalue().data(), static_cast<int>(this->parametervalue().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.parameterValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->parametervalue(), output);
  }

  // string error = 14;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mmind.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mmind.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 command = 1;
  if (this->command() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->command(), target);
  }

  // bytes imageRGB = 2;
  if (this->imagergb().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->imagergb(), target);
  }

  // bytes imageDepth = 3;
  if (this->imagedepth().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->imagedepth(), target);
  }

  // bytes imageIr = 4;
  if (this->imageir().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->imageir(), target);
  }

  // repeated string cameraIds = 5;
  for (int i = 0, n = this->cameraids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cameraids(i).data(), static_cast<int>(this->cameraids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.cameraIds");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->cameraids(i), target);
  }

  // bytes imageGrating = 6;
  if (this->imagegrating().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->imagegrating(), target);
  }

  // string camIntri = 7;
  if (this->camintri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->camintri().data(), static_cast<int>(this->camintri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.camIntri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->camintri(), target);
  }

  // string offsetParams = 8;
  if (this->offsetparams().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->offsetparams().data(), static_cast<int>(this->offsetparams().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.offsetParams");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->offsetparams(), target);
  }

  // string cameraStatus = 9;
  if (this->camerastatus().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->camerastatus().data(), static_cast<int>(this->camerastatus().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.cameraStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->camerastatus(), target);
  }

  // bytes stereoImages = 10;
  if (this->stereoimages().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->stereoimages(), target);
  }

  // bool isLowBrightness = 11;
  if (this->islowbrightness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->islowbrightness(), target);
  }

  // string remapParams = 12;
  if (this->remapparams().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remapparams().data(), static_cast<int>(this->remapparams().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.remapParams");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->remapparams(), target);
  }

  // string parameterValue = 13;
  if (this->parametervalue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parametervalue().data(), static_cast<int>(this->parametervalue().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.parameterValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->parametervalue(), target);
  }

  // string error = 14;
  if (this->error().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error().data(), static_cast<int>(this->error().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mmind.Response.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mmind.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mmind.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string cameraIds = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cameraids_size());
  for (int i = 0, n = this->cameraids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->cameraids(i));
  }

  // bytes imageRGB = 2;
  if (this->imagergb().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->imagergb());
  }

  // bytes imageDepth = 3;
  if (this->imagedepth().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->imagedepth());
  }

  // bytes imageIr = 4;
  if (this->imageir().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->imageir());
  }

  // bytes imageGrating = 6;
  if (this->imagegrating().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->imagegrating());
  }

  // string camIntri = 7;
  if (this->camintri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camintri());
  }

  // string offsetParams = 8;
  if (this->offsetparams().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->offsetparams());
  }

  // string cameraStatus = 9;
  if (this->camerastatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->camerastatus());
  }

  // bytes stereoImages = 10;
  if (this->stereoimages().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->stereoimages());
  }

  // string remapParams = 12;
  if (this->remapparams().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remapparams());
  }

  // string parameterValue = 13;
  if (this->parametervalue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parametervalue());
  }

  // string error = 14;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  // int32 command = 1;
  if (this->command() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->command());
  }

  // bool isLowBrightness = 11;
  if (this->islowbrightness() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mmind.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mmind.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mmind.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mmind.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cameraids_.MergeFrom(from.cameraids_);
  if (from.imagergb().size() > 0) {

    imagergb_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagergb_);
  }
  if (from.imagedepth().size() > 0) {

    imagedepth_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagedepth_);
  }
  if (from.imageir().size() > 0) {

    imageir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imageir_);
  }
  if (from.imagegrating().size() > 0) {

    imagegrating_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagegrating_);
  }
  if (from.camintri().size() > 0) {

    camintri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camintri_);
  }
  if (from.offsetparams().size() > 0) {

    offsetparams_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.offsetparams_);
  }
  if (from.camerastatus().size() > 0) {

    camerastatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.camerastatus_);
  }
  if (from.stereoimages().size() > 0) {

    stereoimages_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stereoimages_);
  }
  if (from.remapparams().size() > 0) {

    remapparams_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remapparams_);
  }
  if (from.parametervalue().size() > 0) {

    parametervalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parametervalue_);
  }
  if (from.error().size() > 0) {

    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  if (from.command() != 0) {
    set_command(from.command());
  }
  if (from.islowbrightness() != 0) {
    set_islowbrightness(from.islowbrightness());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mmind.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mmind.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  cameraids_.InternalSwap(CastToBase(&other->cameraids_));
  imagergb_.Swap(&other->imagergb_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imagedepth_.Swap(&other->imagedepth_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imageir_.Swap(&other->imageir_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  imagegrating_.Swap(&other->imagegrating_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camintri_.Swap(&other->camintri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  offsetparams_.Swap(&other->offsetparams_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  camerastatus_.Swap(&other->camerastatus_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stereoimages_.Swap(&other->stereoimages_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remapparams_.Swap(&other->remapparams_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parametervalue_.Swap(&other->parametervalue_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  error_.Swap(&other->error_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(command_, other->command_);
  swap(islowbrightness_, other->islowbrightness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_image_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_image_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mmind
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mmind::Request* Arena::CreateMaybeMessage< ::mmind::Request >(Arena* arena) {
  return Arena::CreateInternal< ::mmind::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mmind::Response* Arena::CreateMaybeMessage< ::mmind::Response >(Arena* arena) {
  return Arena::CreateInternal< ::mmind::Response >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
